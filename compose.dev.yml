services:
  schedule:
    image: schedule3-service
    build:
      context: schedule
      target: dev
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./schedule:/go/src/app
    networks:
      - postgres
    ports:
      - 3000:3000

  postgres:
    container_name: postgres_container
    image: postgres
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-kb_bmstu_map_api_db}
      PGDATA: /data/postgres
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-kb_bmstu_map_api_db}
      interval: 10s
      timeout: 10s
      retries: 10
    # volumes:
      #  - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    attach: false
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

networks:
  postgres:
    driver: bridge

volumes:
    pgadmin:
